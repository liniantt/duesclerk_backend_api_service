# APPLICATION PROPERTIES :
spring.application.name=DuesClerkWebService
spring.application.admin.enabled=true
#
#
# SERVER CONFIGURATION
server.port=9001
# Server - Compression :
server.compression.min-response-size=2KB
server.compression.enabled=true
server.compression.mime-types=text/html,text/css,text/csv,text/javascript,text/markdown,text/plain
# Server - Error handling :
server.error.include-binding-errors=on_param
server.error.include-exception=true
server.error.include-message=on_param
server.error.include-stacktrace=on_param
server.error.whitelabel.enabled=true
server.error.path=/error
# Server - Session :
server.servlet.encoding.charset=utf-8
server.servlet.session.tracking-modes=cookie
server.servlet.session.cookie.max-age=30
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.name=cookie_session_duesclerk
#
#
# MANAGEMENT CONFIGURATION
management.server.port=9000
springdoc.use-management-port=true
management.endpoints.enabled-by-default=true
management.server.base-path=/management
management.server.ssl.enabled=true
management.endpoints.web.exposure.include=health, openapi, swaggerui
#
# Metrics - NewRelic Micrometer Telemetry
management.newrelic.metrics.export.api-key=NRAK-4C9YBXH3AIQTEJ0QQRJ951UAPBJ
management.newrelic.metrics.export.account-id=3583729
# Telemetry interval
management.newrelic.metrics.export.step=30s
# Set metrics publishing through REST
management.newrelic.metrics.export.client-provider-type=insights_api
# In-memory telemetry backend
management.simple.metrics.export.enabled=true
# Metrics : Micrometer : Stackdriver
#management.stackdriver.metrics.export.project-id=my-project
#management.stackdriver.metrics.export.step=30s
# Metrics : Micrometer : Wavefront
#management.wavefront.api-token=YOUR_API_TOKEN
#management.wavefront.uri=proxy://localhost:2878
#management.wavefront.metrics.export.step=30s
# Metrics : Micrometer : StatsD
#management.statsd.metrics.export.host=statsd.example.com
#management.statsd.metrics.export.port=9125
#management.statsd.metrics.export.protocol=udp
#management.statsd.metrics.export.flavor=etsy
#
#
# DATABASE CONFIGURATION
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/duesclerk
spring.datasource.username=application_user
spring.datasource.password=#%DB.User.application_user%#
spring.datasource.hikari.initialization-fail-timeout=120
#
#
# HIKARI-CP CONFIGURATION
#
# Maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.connection-timeout=20000
# Minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle=10
# Maximum pool size
spring.datasource.hikari.maximum-pool-size=10
# Maximum idle time for connection
spring.datasource.hikari.idle-timeout=10000
# Maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.max-lifetime=1000
# Default auto-commit behavior
spring.datasource.hikari.auto-commit=true
#
#
#
# HIBERNATE AND JPA CONFIGURATION
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
#
#
# THYMELEAF CONFIGURATION
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
spring.thymeleaf.cache=true
spring.thymeleaf.encoding=utf-8
spring.thymeleaf.servlet.content-type=text/html
#
#
# EMAIL CONFIGURATION
spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.username=info@duesclerk.liniantt.com
spring.mail.password=--------------------------
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
#
#
# REQUEST CONFIGURATION
spring.webflux.multipart.max-headers-size=5MB
spring.servlet.multipart.max-request-size=5MB
server.tomcat.max-http-form-post-size=5MB
server.tomcat.max-swallow-size=5MB
server.tomcat.uri-encoding=UTF-8
server.tomcat.max-keep-alive-requests=90
server.tomcat.max-connections=8100
server.tomcat.accept-count=100
server.tomcat.reject-illegal-header=true
server.tomcat.resource.allow-caching=true
server.tomcat.remoteip.protocol-header-https-value=https
#
#
# PROCESSOR CONFIGURATION
server.tomcat.processor-cache=150
server.tomcat.threads.max=100
server.tomcat.threads.min-spare=10
server.tomcat.background-processor-delay=10s
#
#
# SWAGGER DOCUMENTATION CONFIGURATION
springdoc.show-actuator=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.deep-linking=true
#
# LOGGING AND DEBUG CONFIGURATION
debug=true
spring.jpa.properties.hibernate.format_sql=true
# Logging - Hibernate :
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE
logging.level.org.hibernate=WARN
# Logging - Spring :
logging.level.org.springframework=WARN
logging.level.com.springsecurity.demo=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
logging.level.com.howtodoinjava=TRACE
# Logging - Tomcat :
server.tomcat.accesslog.encoding=UTF-8
server.tomcat.accesslog.locale=en_US
server.tomcat.accesslog.file-date-format=yyy-MM-dd
server.tomcat.accesslog.buffered=true
server.tomcat.accesslog.check-exists=true
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.max-days=-1
server.tomcat.accesslog.request-attributes-enabled=true
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.directory=logs
server.tomcat.accesslog.pattern=common
#
#logging.config=classpath:logback-prod.xml.old
#logging.file.name=logs/DuesClerkWebService.log
